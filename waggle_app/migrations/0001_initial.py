# Generated by Django 4.2.25 on 2025-10-17 21:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('experience', models.IntegerField()),
                ('specialty', models.CharField(blank=True, max_length=500)),
                ('bio', models.CharField(blank=True, max_length=1000)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', models.CharField(choices=[('owner', 'Pet Owner'), ('sitter', 'Pet Sitter'), ('both', 'Owner & Sitter')], default='owner', max_length=10)),
                ('role', models.CharField(choices=[('owner', 'Pet Owner'), ('sitter', 'Pet Sitter'), ('both', 'Owner & Sitter')], default='owner', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(default='dog', max_length=50)),
                ('breed', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('feed_schedule', models.CharField(max_length=100)),
                ('medicine', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to='waggle_app.owner')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_start', models.DateField(verbose_name='Start Date')),
                ('booking_end', models.DateField(verbose_name='End Date')),
                ('message', models.CharField(blank=True, max_length=2000)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings_made', to='waggle_app.owner')),
                ('pets', models.ManyToManyField(related_name='bookings', to='waggle_app.pet')),
                ('sitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings_received', to='waggle_app.sitter')),
            ],
        ),
    ]
